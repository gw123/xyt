<?php

namespace common\models;

use Yii;
use common\utils\Upload;

/**
 * This is the model class for table "wp_video_album".
 *
 * @property integer $id
 * @property integer $uid
 * @property integer $status
 * @property string $desc
 * @property string $title
 * @property string $cover
 * @property string $tag
 */
class Album extends \yii\db\ActiveRecord
{
    public  $error;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'video_album';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['uid', 'status'], 'integer'],
            [['desc'], 'string', 'max' => 1024],
            [['title'], 'string', 'max' => 64],
            [['cover', 'tag'], 'string', 'max' => 256]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'uid' => 'Uid',
            'status' => 'Status',
            'desc' => 'Desc',
            'title' => 'Title',
            'cover' => 'Cover',
            'tag' => 'Tag',
        ];
    }

    public function beforeSave($insert)
    {
        //var_dump( $insert ); exit;
        empty($this->uid)&&$this->uid=1;
        empty($this->cover) &&$this->cover=1;
        empty($this->status)&&$this->status=1;

        $path = Upload::uploadOne('cover','image');
        if(empty($path)){  $this->error= Upload::$error; return false; }

        $url  = Upload::toUrl($path);
        $this->cover = $url;

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     * @return AlbumQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new AlbumQuery(get_called_class());
    }

    public static function  getAlbumTitle($id)
    {

        $datas = Yii::$app->cache->get('albums');
        if( empty($datas) )
        {
            $res = Album::find()->select('id,title')->asArray()->all();
            $datas =[];
            foreach ($res as $index => $item )
            {
             $datas[$item['id']]  = $item['title'];
            }
            Yii::$app->cache->set('albums',$datas,3600);
        }

        return   isset($datas[$id]) ? $datas[$id] : '空专辑';

    }

}
