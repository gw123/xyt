第1章 javascript简介 
1.1 javascript简史 
1.2 javascript实现 
1.2.1 ecmascript 
1.2.2 文档对象模型(dom) 
1.2.3 浏览器对象模型(bom) 
1.3 javascript版本 
1.4 小结 
第2章 在html中使用javascript 
2.1 script元素 
2.1.1 标签的位置 
2.1.2 延迟脚本 
2.1.3 异步脚本 
2.1.4 在xhtml中的用法 
2.1.5 不推荐使用的语法 
2.2 嵌入代码与外部文件 
2.3 文档模式 
2.4 (noscript)元素 
2.5 小结 
第3章 基本概念 
3.1 语法 
3.1.1 区分大小写 
3.1.2 标识符 
3.1.3 注释 
3.1.4 严格模式 
3.1.5 语句 
3.2 关键字和保留字 
3.3 变量 
3.4 数据类型 
3.4.1 typeof操作符 
3.4.2 undefined类型 
3.4.3 null类型 
3.4.4 boolean类型 
3.4.5 number类型 
3.4.6 string类型 
3.4.7 object类型 
3.5 操作符 
3.5.1 一元操作符 
3.5.2 位操作符 
3.5.3 布尔操作符 
3.5.4 乘性操作符 
3.5.5 加性操作符 
3.5.6 关系操作符 
3.5.7 相等操作符 
3.5.8 条件操作符 
3.5.9 赋值操作符 
3.5.10 逗号操作符 
3.6 语句 
3.6.1 if语句 
3.6.2 do-while语句 
3.6.3 while语句 
3.6.4 for语句 
3.6.5 for-in语句 
3.6.6 label语句 
3.6.7 break和continue语句 
3.6.8 with语句 
3.6.9 switch语句 
3.7 函数 
3.7.1 理解参数 
3.7.2 没有重载 
3.8 小结 
第4章 变量、作用域和内存问题 
4.1 基本类型和引用类型的值 
4.1.1 动态的属性 
4.1.2 复制变量值 
4.1.3 传递参数 
4.1.4 检测类型 
4.2 执行环境及作用域 
4.2.1 延长作用域链 
4.2.2 没有块级作用域 
4.3 垃圾收集 
4.3.1 标记清除 
4.3.2 引用计数 
4.3.3 性能问题 
4.3.4 管理内存 
4.4 小结 
第5章 引用类型 
5.1 object类型 
5.2 array类型 
5.2.1 检测数组 
5.2.2 转换方法 
5.2.3 栈方法 
5.2.4 队列方法 
5.2.5 重排序方法 
5.2.6 操作方法 
5.2.7 位置方法 
5.2.8 迭代方法 
5.2.9 缩小方法 
5.3 date类型 
5.3.1 继承的方法 
5.3.2 日期格式化方法 
5.3.3 日期/时间组件方法 
5.4 regexp类型 
5.4.1 regexp实例属性 
5.4.2 regexp实例方法 
5.4.3 regexp构造函数属性 
5.4.4 模式的局限性 
5.5 function类型 
5.5.1 没有重载(深入理解) 
5.5.2 函数声明与函数表达式 
5.5.3 作为值的函数 
5.5.4 函数内部属性 
5.5.5 函数属性和方法 
5.6 基本包装类型 
5.6.1 boolean类型 
5.6.2 number类型 
5.6.3 string类型 
5.7 单体内置对象 
5.7.1 global对象 
5.7.2 math对象 
5.8 小结 
第6章 面向对象的程序设计 
6.1 理解对象 
6.1.1 属性类型 
6.1.2 定义多个属性 
6.1.3 读取属性的特性 
6.2 创建对象 
6.2.1 工厂模式 
6.2.2 构造函数模式 
6.2.3 原型模式 
6.2.4 组合使用构造函数模式和原型模式 
6.2.5 动态原型模式 
6.2.6 寄生构造函数模式 
6.2.7 稳妥构造函数模式 
6.3 继承 
6.3.1 原型链 
6.3.2 借用构造函数 
6.3.3 组合继承 
6.3.4 原型式继承 
6.3.5 寄生式继承 
6.3.6 寄生组合式继承 
6.4 小结 
第7章 函数表达式 
7.1 递归 
7.2 闭包 
7.2.1 闭包与变量 
7.2.2 关于this对象 
7.2.3 内存泄漏 
7.3 模仿块级作用域 
7.4 私有变量 
7.4.1 静态私有变量 
7.4.2 模块模式 
7.4.3 增强的模块模式 
7.5 小结 
第8章 bom 
8.1 window对象 
8.1.1 全局作用域 
8.1.2 窗口关系及框架 
8.1.3 窗口位置 
8.1.4 窗口大小 
8.1.5 导航和打开窗口 
8.1.6 间歇调用和超时调用 
8.1.7 系统对话框 
8.2 location对象 
8.2.1 查询字符串参数 
8.2.2 位置操作 
8.3 navigator对象 
8.3.1 检测插件 
8.3.2 注册处理程序 
8.4 screen对象 
8.5 history对象 
8.6 小结 
第9章 客户端检测 
9.1 能力检测 
9.1.1 更可靠的能力检测 
9.1.2 能力检测，不是浏览器检测 
9.2 怪癖检测 
9.3 用户代理检测 
9.3.1 用户代理字符串的历史 
9.3.2 用户代理字符串检测技术 
9.3.3 完整的代码 
9.3.4 使用方法 
9.4 小结 
第10章 dom 
10.1 节点层次 
10.1.1 node类型 
10.1.2 document类型 
10.1.3 element类型 
10.1.4 text类型 
10.1.5 comment类型 
10.1.6 cdatasection类型 
10.1.7 documenttype类型 
10.1.8 documentfragment类型 
10.1.9 attr类型 
10.2 dom操作技术 
10.2.1 动态脚本 
10.2.2 动态样式 
10.2.3 操作表格 
10.2.4 使用nodelist 
10.3 小结 
第11章 dom扩展 
11.1 选择符api 
11.1.1 queryselector()方法 
11.1.2 queryselectorall()方法 
11.1.3 matchesselector()方法 
11.2 元素遍历 
11.3 html5 
11.3.1 与类相关的扩充 
11.3.2 焦点管理 
11.3.3 htmldocument的变化 
11.3.4 字符集属性 
11.3.5 自定义数据属性 
11.3.6 插入标记 
11.3.7 scrollintoview()方法 
11.4 专有扩展 
11.4.1 文档模式 
11.4.2 children属性 
11.4.3 contains()方法 
11.4.4 插入文本 
11.4.5 滚动 
11.5 小结 
第12章 dom2和dom3 
12.1 dom变化 
12.1.1 针对xml命名空间的变化 
12.1.2 其他方面的变化 
12.2 样式 
12.2.1 访问元素的样式 
12.2.2 操作样式表 
12.2.3 元素大小 
12.3 遍历 
12.3.1 nodeiterator 
12.3.2 treewalker 
12.4 范围 
12.4.1 dom中的范围 
12.4.2 ie8及更早版本中的范围 
12.5 小结 
第13章 事件 
13.1 事件流 
13.1.1 事件冒泡 
13.1.2 事件捕获 
13.1.3 dom事件流 
13.2 事件处理程序 
13.2.1 html事件处理程序 
13.2.2 dom0级事件处理程序 
13.2.3 dom2级事件处理程序 
13.2.4 ie事件处理程序 
13.2.5 跨浏览器的事件处理程序 
13.3 事件对象 
13.3.1 dom中的事件对象 
13.3.2 ie中的事件对象 
13.3.3 跨浏览器的事件对象 
13.4 事件类型 
13.4.1 ui事件 
13.4.2 焦点事件 
13.4.3 鼠标与滚轮事件 
13.4.4 键盘与文本事件 
13.4.5 复合事件 
13.4.6 变动事件 
13.4.7 html5事件 
13.4.8 设备事件 
13.4.9 触摸与手势事件 
13.5 内存和性能 
13.5.1 事件委托 
13.5.2 移除事件处理程序 
13.6 模拟事件 
13.6.1 dom中的事件模拟 
13.6.2 ie中的事件模拟 
13.7 小结 
第14章 表单脚本 
14.1 表单的基础知识 
14.1.1 提交表单 
14.1.2 重置表单 
14.1.3 表单字段 
14.2 文本框脚本 
14.2.1 选择文本 
14.2.2 过滤输入 
14.2.3 自动切换焦点 
14.2.4 html5约束验证api 
14.3 选择框脚本 
14.3.1 选择选项 
14.3.2 添加选项 
14.3.3 移除选项 
14.3.4 移动和重排选项 
14.4 表单序列化 
14.5 富文本编辑 
14.5.1 使用contenteditable属性 
14.5.2 操作富文本 
14.5.3 富文本选区 
14.5.4 表单与富文本 
14.6 小结 
第15章 使用canvas绘图 
15.1 基本用法 
15.2 2d上下文 
15.2.1 填充和描边 
15.2.2 绘制矩形 
15.2.3 绘制路径 
15.2.4 绘制文本 
15.2.5 变换 
15.2.6 绘制图像 
15.2.7 阴影 
15.2.8 渐变 
15.2.9 模式 
15.2.10 使用图像数据 
15.2.11 合成 
15.3 webgl 
15.3.1 类型化数组 
15.3.2 webgl上下文 
15.3.3 支持 
15.4 小结 
第16章 html5脚本编程 
16.1 跨文档消息传递 
16.2 原生拖放 
16.2.1 拖放事件 
16.2.2 自定义放置目标 
16.2.3 datatransfer对象 
16.2.4 dropeffect与effectallowed 
16.2.5 可拖动 
16.2.6 其他成员 
16.3 媒体元素 
16.3.1 属性 
16.3.2 事件 
16.3.3 自定义媒体播放器 
16.3.4 检测编解码器的支持情况 
16.3.5 audio类型 
16.4 历史状态管理 
16.5 小结 
第17章 错误处理与调试 
17.1 浏览器报告的错误 
17.1.1 ie 
17.1.2 firefox 
17.1.3 safari 
17.1.4 opera 
17.1.5 chrome 
17.2 错误处理 
17.2.1 try-catch语句 
17.2.2 抛出错误 
17.2.3 错误(error)事件 
17.2.4 处理错误的策略 
17.2.5 常见的错误类型 
17.2.6 区分致命错误和非致命错误 
17.2.7 把错误记录到服务器 
17.3 调试技术 
17.3.1 将消息记录到控制台 
17.3.2 将消息记录到当前页面 
17.3.3 抛出错误 
17.4 常见的ie错误 
17.4.1 操作终止 
17.4.2 无效字符 
17.4.3 未找到成员 
17.4.4 未知运行时错误 
17.4.5 语法错误 
17.4.6 系统无法找到指定资源 
17.5 小结 
第18章 javascript与xml 
18.1 浏览器对xml dom的支持 
18.1.1 dom2级核心 
18.1.2 domparser类型 
18.1.3 xmlserializer类型 
18.1.4 ie8及之前版本中的xml 
18.1.5 跨浏览器处理xml 
18.2 浏览器对xpath的支持 
18.2.1 dom3级xpath 
18.2.2 ie中的xpath 
18.2.3 跨浏览器使用xpath 
18.3 浏览器对xslt的支持 
18.3.1 ie中的xslt 
18.3.2 xsltprocessor类型 
18.3.3 跨浏览器使用xslt 
18.4 小结 
第19章 e4x 
19.1 e4x的类型 
19.1.1 xml类型 
19.1.2 xmllist类型 
19.1.3 namespace类型 
19.1.4 qname类型 
19.2 一般用法 
19.2.1 访问特性 
19.2.2 其他节点类型 
19.2.3 查询 
19.2.4 构建和操作xml 
19.2.5 解析和序列化 
19.2.6 命名空间 
19.3 其他变化 
19.4 全面启用e4x 
19.5 小结 
第20章 json 
20.1 语法 
20.1.1 简单值 
20.1.2 对象 
20.1.3 数组 
20.2 解析与序列化 
20.2.1 json对象 
20.2.2 序列化选项 
20.2.3 解析选项 
20.3 小结 
第21章 ajax与comet 
21.1 xmlhttprequest对象 
21.1.1 xhr的用法 
21.1.2 http头部信息 
21.1.3 get请求 
21.1.4 post请求 
21.2 xmlhttprequest 2级 
21.2.1 formdata 
21.2.2 超时设定 
21.2.3 overridemimetype()方法 
21.3 进度事件 
21.3.1 load事件 
21.3.2 progress事件 
21.4 跨源资源共享 
21.4.1 ie对cors的实现 
21.4.2 其他浏览器对cors的实现 
21.4.3 preflighted reqeusts 
21.4.4 带凭据的请求 
21.4.5 跨浏览器的cors 
21.5 其他跨域技术 
21.5.1 图像ping 
21.5.2 jsonp 
21.5.3 comet 
21.5.4 服务器发送事件 
21.5.5 web sockets 
21.5.6 sse与web sockets 
21.6 安全 
21.7 小结 
第22章 高级技巧 
22.1 高级函数 
22.1.1 安全的类型检测 
22.1.2 作用域安全的构造函数 
22.1.3 惰性载入函数 
22.1.4 函数绑定 
22.1.5 函数柯里化 
22.2 防篡改对象 
22.2.1 不可扩展对象 
22.2.2 密封的对象 
22.2.3 冻结的对象 
22.3 高级定时器 
22.3.1 重复的定时器 
22.3.2 yielding processes 
22.3.3 函数节流 
22.4 自定义事件 
22.5 拖放 
22.5.1 修缮拖动功能 
22.5.2 添加自定义事件 
22.6 小结 
第23章 离线应用与客户端存储 
23.1 离线检测 
23.2 应用缓存 
23.3 数据存储 
23.3.1 cookie 
23.3.2 ie用户数据 
23.3.3 web存储机制 
23.3.4 indexeddb 
23.4 小结 
第24章 最佳实践 
24.1 可维护性 
24.1.1 什么是可维护的代码 
24.1.2 代码约定 
24.1.3 松散耦合 
24.1.4 编程实践 
24.2 性能 
24.2.1 注意作用域 
24.2.2 选择正确方法 
24.2.3 最小化语句数 
24.2.4 优化dom交互 
24.3 部署 
24.3.1 构建过程 
24.3.2 验证 
24.3.3 压缩 
24.4 小结 
第25章 新兴的api 
25.1 requestanimationframe() 
25.1.1 早期动画循环 
25.1.2 循环间隔的问题 
25.1.3 mozrequestanimation-frame 
25.1.4 webkitrequestanima-tionframe与msrequest-animationframe 
25.2 page visibility api 
25.3 geolocation api 
25.4 file api 
25.4.1 filereader类型 
25.4.2 读取部分内容 
25.4.3 对象url 
25.4.4 读取拖放的文件 
25.4.5 使用xhr上传文件 
25.5 web计时 
25.6 web workers 
25.6.1 使用worker 
25.6.2 worker全局作用域 
25.6.3 包含其他脚本 
25.6.4 web workers的未来 
25.7 小结 
附录a ecmascript harmony 
附录b 严格模式 
附录c javascript库 
附录d javascript工具 
