<?php
namespace frontend\controllers;

use Yii;
use yii\base\InvalidParamException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;
use frontend\models\PasswordResetRequestForm;
use frontend\models\ResetPasswordForm;
use frontend\models\SignupForm;
use frontend\models\ContactForm;

/**
 * Site controller
 */
class SiteController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout', 'signup'],
                'rules' => [
                    [
                        'actions' => ['signup'],
                        'allow' => true,
                        'roles' => ['?'],
                    ],
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [ 'class' => 'yii\web\ErrorAction',],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public  function  beforeAction($action){
        $this->layout = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Displays homepage.
     *
     * @return mixed
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

    /**
     * Logs in a user.
     *
     * @return mixed
     */
    public function actionLogin()
    {
        $this->layout = false;

        if(Yii::$app->request->isAjax)
        {
            if (!Yii::$app->user->isGuest) {
                $this->asJson(  [ 'status'=>2 , 'msg'=>'已经登陆' ]  );
            }

            $model = new LoginForm();
            if( !$model->load( Yii::$app->request->post() ,'data' ) )
            {
                return $this->asJson(  [ 'status'=>4 , 'msg'=>'参数验证失败' ]  );
            }
            if ( $model->login()) {
                return $this->asJson(  [ 'status'=>1 , 'msg'=>'登陆成功' ]  );
            } else {
                return $this->asJson( [ 'status'=>3 , 'msg'=>'登陆失败' ]  );
            }
        }

        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $model = new LoginForm();
        if ($model->load(Yii::$app->request->post()) && $model->login()) {

            return $this->goBack();
        } else {
            return $this->render('login', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Logs out the current user.
     *
     * @return mixed
     */
    public function actionLogout()
    {
        $this->layout = false;
        if(Yii::$app->request->isAjax)
        {
            Yii::$app->user->logout();
            return $this->asJson( ['status'=>1]);
        }
        Yii::$app->user->logout();
        return $this->goHome();
    }

    /**
     * Displays contact page.
     *
     * @return mixed
     */
    public function actionContact()
    {
        //$this->layout = "index";
        $model = new ContactForm();
        $msg = '';
        if(Yii::$app->request->isPost){
            if ($model->load(Yii::$app->request->post()) && $model->save()) {
                $msg = "反馈成功";
            }else{
                $msg ='反馈失败';
            }
        }


        return $this->render('contact', [
            'model' => $model,
            'msg'=>$msg,
        ]);
    }

    /**
     * Displays about page.
     *
     * @return mixed
     */
    public function actionAbout()
    {
        $this->layout = "index";
        return $this->render('about');
    }

    /**
     * Signs user up.
     *
     * @return mixed
     */
    public function actionSignup()
    {
        $this->layout = false;
        if(Yii::$app->request->isAjax)
        {
            $model = new SignupForm();
            if ( $model->load( Yii::$app->request->post() ,'data' ) ) {
                if ($user = $model->signup()) {

                    return $this->asJson(['status'=>1,'msg'=>'注册成功']);
                }else{
                    if(is_array($model->getErrors()))
                    {
                        $errors = $model->getErrors();
                        $error =array_pop($errors)[0];
                    }
                    else
                        $error = '注册失败';
                    return $this->asJson(['status'=>2,'msg'=> $error ]);
                }
            }else{
                return $this->asJson(['status'=>3 , 'msg'=>'参数不合法']);
            }
        }

        $model = new SignupForm();
        if ( $model->load( Yii::$app->request->post() ) ) {
            if ($user = $model->signup()) {
                if (Yii::$app->getUser()->login($user)) {
                    return $this->goHome();
                }
            }
        }

        return $this->render('signup', [
            'model' => $model,
        ]);
    }

    /**
     * Requests password reset.
     *
     * @return mixed
     */
    public function actionRequestPasswordReset()
    {

        $model = new PasswordResetRequestForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            if ($model->sendEmail()) {
                Yii::$app->session->setFlash('success', 'Check your email for further instructions.');

                return $this->goHome();
            } else {
                Yii::$app->session->setFlash('error', 'Sorry, we are unable to reset password for email provided.');
            }
        }

        return $this->render('requestPasswordResetToken', [
            'model' => $model,
        ]);
    }

    /**
     * Resets password.
     *
     * @param string $token
     * @return mixed
     * @throws BadRequestHttpException
     */
    public function actionResetPassword($token)
    {
        try {
            $model = new ResetPasswordForm($token);
        } catch (InvalidParamException $e) {
            throw new BadRequestHttpException($e->getMessage());
        }

        if ($model->load(Yii::$app->request->post()) && $model->validate() && $model->resetPassword()) {
            Yii::$app->session->setFlash('success', 'New password was saved.');

            return $this->goHome();
        }

        return $this->render('resetPassword', [
            'model' => $model,
        ]);
    }


}
